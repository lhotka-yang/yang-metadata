<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE rfc SYSTEM ".tools/schema/rfc2629.dtd" [
<!ENTITY % netmod SYSTEM ".tools/bplate/netmod.ent">
%netmod;
<!ENTITY % figures SYSTEM "figures.ent">
%figures;
<!ENTITY % yang SYSTEM "yang.ent">
%yang;
<!-- Add other entity declarations here, e.g. for bibliographic items: -->
<!ENTITY RFC6020 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.6020.xml">
<!ENTITY RFC6241 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.6241.xml">
<!ENTITY RFC7159 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.7159.xml">
<!ENTITY RESTCONF SYSTEM
"http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-netconf-restconf.xml">
<!ENTITY XML SYSTEM
"http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-netmod-yang-json.xml">
<!ENTITY YANG-JSON SYSTEM
"http://xml2rfc.ietf.org/public/rfc/bibxml4/reference.W3C.REC-xml-20081126.xml">
]>

<?rfc strict="yes"?>
<?rfc toc="yes"?>
<?rfc tocdepth="3"?>
<?rfc symrefs="no"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>

<rfc category="std">
  <front>
    <title abbrev="YANG Metadata">Defining and Using Metadata with YANG</title>
    <author fullname="Ladislav Lhotka" initials="L." surname="Lhotka">
      <organization>CZ.NIC</organization>
      <address>
        <email>lhotka@nic.cz</email>
      </address>
    </author>
    <author fullname="Reinaldo Penno" initials="R." surname="Penno">
      <organization>Cisco Systems</organization>
      <address>
        <email>repenno@cisco.com</email>
      </address>
    </author>
    <date year="YYYY-MM-DD"/>
    <area/>
    <workgroup>NETMOD Working Group</workgroup>

    <abstract>
      <t></t>
    </abstract>
  </front>

  <middle>
    <section anchor="introduction" title="Introduction">
      <t>There is a need to be able to annotate instances of
      YANG <xref target="RFC6020"/> data nodes with various
      metadata. Typical use cases are:
      <list style="symbols">
	<t>Deactivating a subtree in a configuration datastore while
	keeping the data in place.</t>
	<t>Qualifying the data model information with
	instance-specific data. For example, an annotation may be
	attached to an instance of a leaf with the "union" type to
	indicate the member type to which the instance belongs.</t>
	<t>RPC operations may use metadata annotations for different
	purposes in both requests and responses. For example, NETCONF
	&lt;edit-config&gt; operation (see section 7.2 of <xref
	target="RFC6241"/>) uses annotations in the form of XML
	attributes for identifying the point in the configuration and
	type of the operation.</t>
      </list></t>
      <t>However, metadata annotations could potentially lead to
      interoperability problems if they are used in an ad hoc way by
      different organizations and/or without proper documentation. A
      sound metadata framework for YANG should therefore satisfy these
      requirements:
      <list style="numbers">
	<t>The set of annotations must be extensible in a distributed
	manner so as to allow for defining new annotations without
	running into the risk of collisions with annotations defined
	and used by others.</t>
	<t>Syntax and semantics of annotations must be documented and
	the documentation must be easily accessible.</t>
	<t>Clients of network management protocols such as
	NETCONF <xref target="RFC6241"/> or RESTCONF <xref
	target="I-D.ietf-netconf-restconf"/> must be able to learn all
	annotations supported by a given server and identify each of
	them correctly.</t>
      </list></t>
      <t>This document proposes a systematic way for defining and
      using metadata annotations that satisfies the above
      requirements. For this purpose, YANG extension statement
      "annotation" is defined in the module "ietf-yang-metadata"
      (<xref target="ietf-yang-metadata"/>). Other YANG modules
      importing this module can use the "annotation" statement for
      defining one or more annotations.</t>
      <t>The benefits of defining annotations in a YANG module are as
      follows:
      <list style="symbols">
	<t>Each annotation is bound to a YANG module name, namespace
	URI and prefix. This makes its encoding in instance documents
	(both XML and JSON) straightforward and consistent with the
	encoding of YANG data node instances.</t>
	<t>Annotations are indirectly registered through IANA YANG
	module registration.</t>
	<t>Servers may indicate support for certain annotations using
	standard module advertisement methods, such as the
	&lt;hello&gt; message in NETCONF.</t>
      </list></t>
    </section>

    <section anchor="terminology" title="Terminology">
      <t></t>
    </section>

    <section anchor="annotdef" title="Defining Annotations in YANG">
      <t>Metadata annotations are defined with YANG extension
      statement "annotation". This YANG language extension is defined
      in the module "ietf-yang-metadata" (<xref
      target="ietf-yang-metadata"/>).</t>
      <t>The "annotation" keyword must always be prepended with the
      namespace prefix assigned when the "ietf-yang-metadata" module
      is imported (see section 7.17 in <xref target="RFC6020"/>). In
      the following text and examples, we will use the "md" prefix for
      this purpose.</t>
      <t>Substatements of "md:annotation" are shown in <xref
      target="tab.annsub"/>. They are all core YANG statements, and
      the numbers in the second column refer to the corresponding
      sections in RFC 6020_<xref target="RFC6020"/> where each
      statement is described.</t>
      <texttable anchor="tab.annsub"
		 title='Substatements of "md:annotation".'>
	<ttcol>substatement</ttcol>
	<ttcol>RFC 6020 section</ttcol>
	<ttcol>cardinality</ttcol>
	<c>description</c><c>7.19.3</c><c>0..1</c>
	<c>reference</c><c>7.19.4</c><c>0..1</c>
	<c>status</c><c>7.19.2</c><c>0..1</c>
	<c>type</c><c>7.6.3</c><c>0..1</c>
	<c>units</c><c>7.3.3</c><c>0..1</c>
      </texttable>
      <t>Using the "type" statement, a type may be specified for the
      annotation value according to the same rules as for YANG leaf or
      leaf-list types. However, the "type" statement is optional as a
      substatement of "md:annotation" statement. If it is not present,
      the built-in "string" type is the default.</t>
      <t>For example, the following module defines the "inactive"
      annotation:</t>
      <figure>
	&example-inactive.yang;
      </figure>
    </section>

    <section anchor="dsdl" title="Representing Annotations in DSDL Schemas">
      <t></t>
    </section> 

    <section anchor="encoding" title="The Encoding of Annotations">
      <t>XML attributes <xref target="W3C.REC-xml-20081126"/> are a
      natural choice for encoding metadata in XML instance
      documents. JSON <xref target="RFC7159"/> has no such such
      generic mechanism for adding metadata. This document thus
      introduces a special encoding method that is consistent with the
      JSON encoding of YANG data node instance as defined in <xref
      target="I-D.ietf-netmod-yang-json"/>.</t>

      <section anchor="enc-xml" title="XML Encoding">
	<t>Metadata annotations are added to XML-encoded instances of
	YANG data nodes as XML attributes. The namespace of such an
	attribute is identified by the URI that appears as the
	argument of the "namespace" statement in the YANG module that
	defines the annotation. It is RECOMMENDED that the prefix
	specified "prefix" statement in the same module is used for
	in the qualified name of the annotation.</t>
	<t>For example, the "inactive" annotation as defined in <xref
	target="annotdef"/> may be encoded as follows:</t>
	<figure>
	  <artwork>
    <![CDATA[<foo xmlns:ein="http://example.org/example-inactive"
         ein:inactive="true">
        ...
      </foo>]]>
	  </artwork>
	</figure>
      </section>

      <section anchor="enc-json" title="JSON Encoding">
	<t></t>
      </section>

    </section>

    <section anchor="ietf-yang-metadata" title="Metadata YANG Module">

      <t></t>

      <figure>
	&ietf-yang-metadata.yang;
      </figure>

    </section>

    <section anchor="iana" title="IANA Considerations">
      <t></t>
    </section>

    <section anchor="security" title="Security Considerations">
      <t></t>

    </section>

  </middle>

  <back>
    <references title="Normative References">
      &RFC6020;
      &RFC6241;
      &RFC7159;
    </references>

    <references title="Informative References">
      &RESTCONF;
      &XML;
      &YANG-JSON;
    </references>

    <section anchor="rpc-example" title="Example: NETCONF &lt;get&gt; Reply">
      <t></t>

      <!-- Example XML documents can also be included in the same way:

      <figure>
	&example-get-reply.xml;
      </figure>
      -->

    </section>
  </back>
</rfc>
